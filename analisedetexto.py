# -*- coding: utf-8 -*-
"""AnalisedeTexto

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s4rccesCQO-2X32-gHnLw5yYoJjCNtEh
"""

import pandas as pd
from collections import Counter


"""

# T1

def leTexto(ficheiro):
    with open(ficheiro, 'r', encoding='utf-8') as f:
        linhas=f.read().splitlines()
    return linhas

texto = leTexto('/content/drive/MyDrive/Prog2/areliquia.txt')

def constroiIndice():
    reliquia = leTexto('/content/drive/MyDrive/Prog2/areliquia.txt')
    lista = ['I', 'II', 'III', 'IV', 'V', 'VI']

    indice = ""
    for c in lista:
        if c in reliquia:
            i = str(reliquia.index(c))
            indice += f"{c}---{i}\n"


    return indice

index = constroiIndice()
print(index)

def normalizaPalavra(palavra):
    pre = ""
    core = ""
    pos = ""
    l = 0
    for c in palavra:
        if not c.isalnum():
            l=l+1
            pre=pre+c
        else: break
    core=palavra[l:]
    i=len(core)-1
    while i >= 0 and not core[i].isalnum():
        pos = core[i]+pos
        i=i-1
    core=core[0:i+1]
    return core.lower()

def totais():
  reliquia = leTexto('/content/drive/MyDrive/Prog2/areliquia.txt')
  lista = ['I', 'II', 'III', 'IV', 'V', 'VI']
  capitulos = 0
  paragrafo = 0
  paragrafo_iniciado = False
  palavras_todas = []
  for capitulo in lista:
    if capitulo in reliquia:
      capitulos += 1
  for linha in reliquia:
      if linha.strip():  # Verifica se a linha não está vazia
          if not paragrafo_iniciado:
              paragrafo += 1
              paragrafo_iniciado = True
      else:
          paragrafo_iniciado = False
  for linha in reliquia:
        if linha.strip():  # Verifica se a linha não está vazia
            palavras = linha.split()
            for palavra in palavras:
                palavra_normalizada = normalizaPalavra(palavra)
                palavras_todas.append(palavra_normalizada)

  return (capitulos, paragrafo, len(palavras_todas))

total=totais()
print(total)

from posixpath import join
def palavra_mais_frequente():
    reliquia = leTexto('/content/drive/MyDrive/Prog2/areliquia.txt')
    reliquiaPalavras = []

    for linha in reliquia:
        if linha.strip():  # Verifica se a linha não está vazia
            palavras = linha.split()
            for palavra in palavras:
                palavra_normalizada = normalizaPalavra(palavra)
                if len(palavra_normalizada) >= 8:
                    reliquiaPalavras.append(palavra_normalizada)
    contagem=Counter(reliquiaPalavras)
    palavra_mais_frequente, ocorrencias = contagem.most_common(1)[0]
    return (palavra_mais_frequente, ocorrencias)

palavra=palavra_mais_frequente()
print(palavra)

def camisinhaMary():
    reliquia = leTexto('/content/drive/MyDrive/Prog2/areliquia.txt')
    count=0
    paragrafo=[]

    for linha in reliquia:
        if linha.strip():  # Verifica se a linha não está vazia
            palavras = linha.split()
            for palavra in palavras:
                palavra_normalizada = normalizaPalavra(palavra)
                paragrafo.append(palavra_normalizada)
        else:
          if ('camisinha' in paragrafo) and ('mary' in paragrafo):
                count += 1
          paragrafo = []
    return count

ocorrem_juntas=camisinhaMary()
print(ocorrem_juntas)
